{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"R_",
				"R_vins_cur"
			],
			[
				"Q",
				"Q_vins_tran"
			],
			[
				"T_",
				"T_vins_tran"
			],
			[
				"vins",
				"vinsOdom_tran"
			],
			[
				"T_vins",
				"T_vins_tran"
			],
			[
				"po",
				"pose"
			],
			[
				"q",
				"Quaterniond"
			],
			[
				"ma",
				"Matrix3d"
			],
			[
				"laser",
				"laser_vins_compare"
			],
			[
				"tran",
				"transformSum"
			],
			[
				"iter",
				"iterCount"
			],
			[
				"del",
				"deltaT"
			],
			[
				"trans",
				"transformSum"
			],
			[
				"is_",
				"is_mapping_valid"
			],
			[
				"time",
				"time_dynamic_filter_1"
			],
			[
				"tim",
				"time_dynamic_filter_1"
			],
			[
				"Poin",
				"PointXYZI"
			],
			[
				"poi",
				"pointSearchInd"
			],
			[
				"int",
				"intensity"
			],
			[
				"is_mapping",
				"is_mapping_init"
			],
			[
				"se",
				"sensor_msgs"
			],
			[
				"P",
				"Publisher"
			],
			[
				"vic",
				"vicon_odom"
			],
			[
				"ori",
				"origin_q"
			],
			[
				"origin",
				"origin_R"
			],
			[
				"Qua",
				"Quaternion"
			],
			[
				"orig",
				"origin_x"
			],
			[
				"vicon",
				"vicon_odom"
			],
			[
				"h",
				"header"
			],
			[
				"ROS",
				"ROS_WARN"
			],
			[
				"laserCloudSurf",
				"laserCloudSurfFromMap"
			],
			[
				"laserCloudC",
				"laserCloudCornerFromMap"
			],
			[
				"point",
				"point_select"
			],
			[
				"Poi",
				"PointCloud"
			],
			[
				"Po",
				"PointXYZI"
			],
			[
				"tra",
				"transformAftMapped"
			],
			[
				"aft",
				"aft_mapped"
			],
			[
				"camera",
				"camera_init"
			],
			[
				"t_",
				"t_set_input2"
			],
			[
				"tmp_",
				"tmp_yaw"
			],
			[
				"pi",
				"pi_round"
			],
			[
				"imu",
				"imuYawLast"
			],
			[
				"tm",
				"tmp_yaw"
			],
			[
				"de",
				"degenerate"
			],
			[
				"mat",
				"matE"
			],
			[
				"cen",
				"centerCubeI"
			],
			[
				"imuPitc",
				"imuPitchLast"
			],
			[
				"imuPi",
				"imuPitchLast"
			],
			[
				"ypr",
				"ypr_imu"
			],
			[
				"Ma",
				"Matrix3f"
			],
			[
				"imuYaw",
				"imuYawLast"
			],
			[
				"R_imu",
				"R_imu_init"
			],
			[
				"qi",
				"Quaternion"
			],
			[
				"ROS_",
				"ROS_WARN"
			],
			[
				"kd",
				"kdtreeSurfFromMap\tpcl::search::KdTree<pcl::PointXYZ>::Ptr"
			],
			[
				"t_debug",
				"t_debug2\tdouble"
			],
			[
				"to",
				"toSec"
			],
			[
				"map",
				"map_filter\tpcl::PointCloud<pcl::PointXYZI>"
			],
			[
				"star",
				"startOri\tfloat"
			],
			[
				"start",
				"startOri"
			],
			[
				"Ve",
				"Vector3f"
			],
			[
				"ROS_WA",
				"ROS_WARN(...)\tmacro"
			],
			[
				"laserC",
				"laserCloudIn2\tconst sensor_msgs::PointCloud2ConstPtr&"
			],
			[
				"RT",
				"RT_odom\tMatrix4d"
			],
			[
				"Ite",
				"IterativeClosestPoint<typename PointSource, typename PointTarget>\tclass"
			],
			[
				"clou",
				"cloud_msg\tpcl::PointCloud<pcl::PointXYZ>"
			],
			[
				"ekf",
				"ekf_node"
			],
			[
				"ROS_W",
				"ROS_WARN(...)\tmacro"
			],
			[
				"ROS_w",
				"ROS_WARN(...)\tmacro"
			],
			[
				"pc",
				"pc_msg\tconst sensor_msgs::PointCloud2ConstPtr&"
			],
			[
				"Kinv",
				"KinvM2\tEigen::Matrix3d"
			],
			[
				"R_mo",
				"R_mocap2\tEigen::Matrix3d"
			],
			[
				"State",
				"StateHist"
			],
			[
				"Stat",
				"StateHist\tvector<State>"
			],
			[
				"stam",
				"stamp_again\tros::Time"
			],
			[
				"stat",
				"GetState()\tVectorXd"
			],
			[
				"state",
				"state_new\tState"
			],
			[
				"Sta",
				"StateHist\tvector<State>"
			],
			[
				"x",
				"X_var\tEigen::MatrixXd"
			],
			[
				"s",
				"stamp\t_stamp_type"
			],
			[
				"qua",
				"Quaterniond\ttypedef"
			],
			[
				"set",
				"setZero()\tEigen::Matrix<double, -1, -1, 0, -1, -1> &"
			],
			[
				"mean",
				"mean_new\tVectorXd"
			],
			[
				"X",
				"X_mean\tEigen::VectorXd"
			],
			[
				"S",
				"State\tstruct"
			],
			[
				"X_p",
				"X_p_last\tState"
			],
			[
				"X_u",
				"X_u_new\tState"
			],
			[
				"Time",
				"Timer\tros::Time"
			],
			[
				"rpy",
				"rpy_to_R(const Eigen::Vector3d &rpy)\tEigen::Matrix3d"
			],
			[
				"datea",
				"dataFile2\tfstream"
			],
			[
				"vect",
				"vector<typename _Tp>\tclass"
			],
			[
				"X_va",
				"X_var\tEigen::MatrixXd"
			],
			[
				"X_m",
				"X_mean_p\tEigen::VectorXd"
			],
			[
				"X_",
				"X_u\tvector<Prediction>"
			],
			[
				"z",
				"Zero()\tconst ConstantReturnType"
			],
			[
				"X_var",
				"X_var_p"
			],
			[
				"data",
				"dataFile2\tfstream"
			],
			[
				"Stamp",
				"Stamp_update\tdouble"
			],
			[
				"in",
				"inverse"
			],
			[
				"X_mean",
				"X_mean_p\tvector<Eigen::VectorXd>"
			],
			[
				"Time_",
				"Time_new\tros::Time"
			],
			[
				"Roll",
				"roll_pitch_yaw"
			],
			[
				"quat",
				"quater2\tEigen::Quaterniond"
			],
			[
				"da",
				"dataFile2\tfstream"
			],
			[
				"Ginv",
				"Ginv_w_dot\tEigen::Matrix3d"
			],
			[
				"X_mean_p",
				"X_mean_p_temp\tEigen::VectorXd"
			],
			[
				"refer",
				"reference\tnav_msgs::Odometry"
			],
			[
				"X_var_",
				"X_var_last"
			],
			[
				"X_mean_",
				"X_mean_temp\tEigen::VectorXd"
			],
			[
				"y",
				"y\t_y_type"
			],
			[
				"W",
				"W\tEigen::MatrixXd"
			],
			[
				"va",
				"var_init\tEigen::MatrixXd"
			],
			[
				"Eig",
				"Eigen::MatrixXd > X_var\tvector<"
			],
			[
				"p",
				"push_back(const value_type &__x)\tvoid"
			],
			[
				"Eigen",
				"Eigen::VectorXd > X_mean\tvector<"
			],
			[
				"t",
				"t\tcv::Mat"
			],
			[
				"w",
				"w\tdouble"
			],
			[
				"do",
				"double_t\ttypedef"
			],
			[
				"rvec",
				"rvec\tcv::Mat"
			],
			[
				"pose_",
				"Pose_ref"
			],
			[
				"Pose",
				"Pose_ref\tnav_msgs::Odometry"
			],
			[
				"pose",
				"posetemp2\tcv::Vec3d"
			],
			[
				"posi",
				"position_cam\tcv::Vec3d"
			],
			[
				"p_f",
				"p_f\tMatrixXd"
			],
			[
				"ins",
				"insec_world"
			],
			[
				"insec",
				"insec_world\tcv::vector<cv::Vec3d>"
			],
			[
				"inse",
				"insec_world_temp\tcv::Vec3d"
			],
			[
				"R",
				"R_IC\tMatrixXd"
			]
		]
	},
	"buffers":
	[
		{
			"file": "laserOdometry.cpp",
			"settings":
			{
				"buffer_size": 47003,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/gf/catkin_ws/src/planner/pcd_trajectory/src/pcd_trajectory_node.cpp",
			"settings":
			{
				"buffer_size": 43829,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/gf/catkin_ws/src/laser_estimation/loam_velodyne/CMakeLists.txt",
			"settings":
			{
				"buffer_size": 1926,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "laserMapping.cpp",
			"settings":
			{
				"buffer_size": 62106,
				"line_ending": "Unix"
			}
		},
		{
			"file": "scanRegistration.cpp",
			"settings":
			{
				"buffer_size": 31392,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/usr/include/pcl-1.7/pcl/search/kdtree.h",
			"settings":
			{
				"buffer_size": 7723,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/usr/include/pcl-1.7/pcl/impl/point_types.hpp",
			"settings":
			{
				"buffer_size": 44096,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 117.0,
		"last_filter": "packa",
		"selected_items":
		[
			[
				"packa",
				"Preferences: Browse Packages"
			],
			[
				"sublimeclang se",
				"Preferences: SublimeClang Settings – User"
			]
		],
		"width": 422.0
	},
	"console":
	{
		"height": 223.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/gf/catkin_ws/src/laser_estimation/loam_velodyne",
		"/home/gf/catkin_ws/src/laser_estimation/loam_velodyne/src"
	],
	"file_history":
	[
		"/home/gf/catkin_ws/src/laser_estimation/loam_velodyne/src/transformMaintenance.cpp",
		"/home/gf/catkin_ws/src/laser_estimation/loam_velodyne/src/loam_velodyne.sublime-project",
		"/home/gf/catkin_ws/src/laser_estimation/loam_velodyne/src/laserOdom_v1.cpp",
		"/home/gf/catkin_ws/src/laser_estimation/loam_velodyne/src/laserOdom_v2.cpp",
		"/home/gf/catkin_ws/src/laser_estimation/loam_velodyne/src/globalCorrection.cpp",
		"/home/gf/catkin_ws/src/laser_estimation/loam_velodyne/src/laser_vins_compare.cpp",
		"/home/bbgf/my_catkin_ws/laser_ekf.launch",
		"/home/bbgf/my_catkin_ws/src/loam_velodyne/loam_velodyne.launch",
		"/home/bbgf/my_catkin_ws/src/loam_continuous/src/scanRegistration.cpp",
		"/home/bbgf/my_catkin_ws/src/loam_velodyne/CMakeLists.txt",
		"/home/bbgf/Downloads/loam_velodyne-master/src/laserOdometry.cpp",
		"/home/bbgf/.config/sublime-text-3/Packages/SublimeClang/SublimeClang.sublime-settings",
		"/home/bbgf/.config/sublime-text-3/Packages/User/SublimeClang.sublime-settings",
		"/usr/include/pcl-1.7/pcl/search/kdtree.h",
		"/home/bbgf/Downloads/loam_velodyne-master/src/laserMapping.cpp",
		"/home/bbgf/my_catkin_ws/src/loam_velodyne/src/scanRegistration.cpp",
		"/home/bbgf/Downloads/loam_velodyne-master/src/scanRegistration.cpp",
		"/home/bbgf/my_catkin_ws/src/loam_continuous/src/laserOdometry.cpp",
		"/home/bbgf/my_catkin_ws/src/loam_continuous/src/laserMapping.cpp",
		"/home/bbgf/.config/sublime-text-3/Packages/Default/Preferences.sublime-settings",
		"/home/bbgf/my_catkin_ws/src/loam_velodyne/src/loam_velodyne.sublime-project",
		"/home/bbgf/Dropbox/ELEC5600/src/ekf_node_quaternion.cpp",
		"/home/bbgf/Desktop/loam_velodyne/src/laserMapping.cpp",
		"/home/bbgf/my_catkin_ws/src/loam_continuous/src/transformMaintenance.cpp",
		"/home/bbgf/my_catkin_ws/src/laser_odom/src/test_icp.cpp",
		"/home/bbgf/my_catkin_ws/src/loam_velodyne/src/laserOdometry.cpp",
		"/home/bbgf/my_catkin_ws/src/loam_velodyne/src/transformMaintenance.cpp",
		"/home/bbgf/my_catkin_ws/src/loam_velodyne/src/laserMapping.cpp",
		"/home/bbgf/my_catkin_ws/src/ekf/src/ekf_node.cpp",
		"/home/bbgf/my_catkin_ws/src/ekf/src/ekf.cpp",
		"/home/bbgf/my_catkin_ws/src/m100_laser/estimation/multi_sensor_ukf/src/quadrotor_ukf_node.cpp",
		"/home/bbgf/my_catkin_ws/src/ekf/launch/bag_tag.launch",
		"/home/bbgf/my_catkin_ws/src/ekf/CMakeLists.txt",
		"/home/bbgf/my_catkin_ws/src/laser_odom/CMakeLists.txt",
		"/home/bbgf/my_catkin_ws/src/laser_odom/package.xml",
		"/home/bbgf/my_catkin_ws/src/tag_detector/src/tag_detector_node.cpp",
		"/home/bbgf/my_catkin_ws/src/ekf/src/ekf.sublime-project",
		"/home/bbgf/my_catkin_ws/src/ekf/src/ekf.h",
		"/home/bbgf/my_ws/src/ekf/launch/bag_tag.launch",
		"/home/bbgf/tra_simu/src/simulation.launch",
		"/home/bbgf/my_ws/src/zmart_cv/include/zmart_cv/zmart_img_proc.hpp",
		"/home/bbgf/my_catkin_ws/src/voxel_trajectory/src/voxel_trajectory/octomap.cpp",
		"/usr/include/eigen3/Eigen/src/Core/MatrixBase.h",
		"/home/bbgf/my_ws/src/ekf/src/ekf.cpp",
		"/home/bbgf/my_ws/src/ekf/src/pose.h",
		"/home/bbgf/my_ws/src/ekf/src/ekf.h",
		"/home/bbgf/Desktop/ukf/quadrotor_ukf_lite/src/quadrotor_ukf.h",
		"/home/bbgf/my_ws/src/ekf/src/ekf_node.cpp",
		"/home/bbgf/my_ws/src/tag_detector/src/tag_detector_node.cpp",
		"/home/bbgf/my_ws/src/ekf/src/ekf.sublime-",
		"/home/bbgf/Desktop/ekf_node_1118.cpp",
		"/home/bbgf/my_ws/src/zmart_cv/src/zmart_img_proc.cpp",
		"/home/bbgf/my_ws/src/ekf/src/ekf.sublime-project",
		"/home/bbgf/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/bbgf/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/bbgf/my_ws/src/tag_detector/launch/bag_tag.launch",
		"/home/bbgf/my_ws/src/zmart_cv/src/zmart_img_gao.cpp",
		"/home/bbgf/my_ws/src/zmart_cv/CMakeLists.txt",
		"/home/bbgf/Desktop/odroid_ws/your_code/trajectory.h",
		"/home/bbgf/my_ws/src/zmart_cv/src/1.sublime-project",
		"/usr/include/opencv2/contrib/openfabmap.hpp",
		"/usr/include/opencv2/calib3d/calib3d.hpp",
		"/home/bbgf/my_ws/src/zmart_cv/src/visual_ref.cpp",
		"/home/bbgf/my_ws/test.cpp",
		"/home/bbgf/my_ws/src/bluefox2/launch/single_nodelet.launch",
		"/home/bbgf/my_ws/src/bluefox2/launch/single_node.launch",
		"/home/bbgf/桌面/#ifndef control_funtion_h",
		"/home/bbgf/my_ws/src/camera_base/launch/extras.launch",
		"/home/bbgf/my_ws/src/bluefox2/launch/general.launch",
		"/home/bbgf/my_ws/src/camera_base-master/launch/extras.launch",
		"/home/bbgf/桌面/ukf/quadrotor_ukf_lite/src/quadrotor_ukf.cpp",
		"/home/bbgf/桌面/ukf/quadrotor_ukf_lite/src/quadrotor_ukf_node.cpp",
		"/home/bbgf/桌面/ukf/quadrotor_ukf_lite/src/quadrotor_ukf.h",
		"/home/bbgf/tra_simu/src/trajectory_generator/src/polynomial_trajectory_generator.h",
		"/home/bbgf/my_ws/src/zmart_cv/src/zmart_img_frontend.cpp",
		"/home/bbgf/my_ws/src/tao/src/tao/img_frontend.cpp",
		"/home/bbgf/my_ws/data/calib_file3.xml",
		"/home/bbgf/my_ws/src/tao/include/tao/img_frontend.hpp",
		"/home/bbgf/tra_simu/src/trajectory_generator/src/trajectory_generator_node2.cpp",
		"/home/bbgf/my_ws/data/calib_file2.xml",
		"/home/bbgf/my_ws/src/using_markers/src/points_and_lines.cpp",
		"/home/bbgf/my_ws/data/2015-10-03-22-37-05.bag",
		"/usr/include/eigen3/Eigen/src/Core/Matrix.h",
		"/home/bbgf/my_ws/src/zmart_cv/src/test.cpp",
		"/home/bbgf/tra_simu/src/pose_utils/src/pose_utils.cpp",
		"/home/bbgf/tra_simu/src/pose_utils/include/pose_utils.h",
		"/home/bbgf/my_ws/src/zmart_cv/src/a.out",
		"/home/bbgf/my_ws/src/zmart_cv/launch/zmart_cv.launch",
		"/home/bbgf/my_ws/src/zmart_cv/src/test",
		"/home/bbgf/my_ws/src/zmart_cv/src/zmart_cv_test.cpp",
		"/home/bbgf/zmart_cv_test.sublime-workspace",
		"/home/bbgf/my_ws/src/zmart_cv/src/zmart_cv.sublime-project",
		"/home/bbgf/tra_simu/src/trajectory_generator/CMakeLists.txt",
		"/home/bbgf/tra_simu/src/trajectory_generator/src/trajectory_generator_node.cpp",
		"/home/bbgf/my_ws/src/simulation/so3_quadrotor_simulator/src/quadrotor_simulator_so3.cpp"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 123.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"check cornor points",
			"deltaR",
			"imuTransHandler",
			"subImuTrans",
			"isDegenerate",
			"TransformToStart",
			"AccumulateRotation",
			"laserCloudCorner_toMapNum",
			"laserCloudCorner_toMapNum:",
			"cube",
			"laserCloudCornerArray",
			"kdtreeCornerFromMap",
			"trans",
			"laserCloudIn",
			"scanPeriod",
			"Down",
			"down",
			"70.0",
			"world",
			"vins_odom",
			"/map",
			"indoor",
			"100.0",
			"0.1",
			"0.05",
			"80.0",
			"100.0",
			"50",
			"80",
			"60",
			"70",
			"80",
			"down",
			"downS",
			"frame_id",
			"laserCloudLessSharpHandler",
			"s",
			"iterCount",
			"s = ",
			"iterCount",
			"iterCoun",
			"rate",
			"iterCount",
			"imu",
			"imuShiftFromStartX",
			"iterCount",
			"if (",
			"iter",
			"if(",
			"if (",
			"if(",
			"if( 1 )",
			"iter",
			"if(1)",
			"iter",
			"0.3",
			"iter",
			"pubSurfPointsLessFlatPointer",
			"surfPointsLessFlat",
			"iter",
			"setLeafSize",
			"70",
			"5",
			"downSizeFilterCorner",
			"rate",
			"laserOdometryHandler",
			"nearestKSearch",
			"downSizeFilterSurf",
			"deltaT",
			"deltT",
			"iter",
			"rate",
			"ratr",
			"sub",
			"iter",
			"itrt",
			"pubLaserOdometry",
			"frameCount",
			"skipFrameNum",
			"mapFrameNum",
			"frameCount",
			"stackFrameNum",
			"skip",
			"skipFrameNum",
			"frameCount",
			"skipFrameNum",
			"pubLaserOdometry",
			"rate",
			"ros::Time",
			"imuPointerLast",
			"imuHandler",
			"initial value check",
			"matB",
			"matB.at<float>(i, 0)",
			"transformAssociateToMap",
			"imuTransHandler",
			"matA1",
			"laserCloudCornerLast",
			"kdtreeCornerLast",
			" kdtree",
			"TransformToEnd",
			"TransformToStart",
			"transform",
			"imuHandler",
			"AccumulateIMUShift",
			"TransformToStart",
			"imuRollLast",
			"imuRollStart",
			"AccumulateRotation",
			"PluginIMURotation",
			"imuTransHandler",
			"newImuTrans",
			"laserCloudSharpHandler",
			"change_KF",
			"TransformToStart",
			"rate",
			"TransformToEnd",
			"TransformToStart",
			"PluginIMURotation",
			"transformAssociateToMap",
			"pubOdomAftMapped",
			"aft",
			"50.0",
			"50",
			"80",
			"transformUpdate",
			"transformBefMapped",
			"transformAssociateToMap"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "laserOdometry.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 47003,
						"regions":
						{
						},
						"selection":
						[
							[
								42818,
								42818
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14382.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/gf/catkin_ws/src/planner/pcd_trajectory/src/pcd_trajectory_node.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43829,
						"regions":
						{
						},
						"selection":
						[
							[
								885,
								885
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/gf/catkin_ws/src/laser_estimation/loam_velodyne/CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1926,
						"regions":
						{
						},
						"selection":
						[
							[
								1447,
								1447
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "laserMapping.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 62106,
						"regions":
						{
						},
						"selection":
						[
							[
								49532,
								49532
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 19092.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "scanRegistration.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 31392,
						"regions":
						{
						},
						"selection":
						[
							[
								31043,
								31048
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1581.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/usr/include/pcl-1.7/pcl/search/kdtree.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7723,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1457.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/usr/include/pcl-1.7/pcl/impl/point_types.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44096,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content"
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 21411.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "loam_velodyne.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"src/ekf_node.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/my_catkin_ws/src/pcd_trajectory_indoor/pcd_trajectory/src/pcd_trajectory.sublime-project"
			],
			[
				"\\",
				"~/my_catkin_ws/src/loam_velodyne/src/loam_velodyne.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 302.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
